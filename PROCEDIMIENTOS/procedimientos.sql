--1. Crear un procedimiento llamado PON_AL_ACT que se encargue de añadir una actividad (con todos
--sus CE) a un alumno que se pase como parámetro (se pasará el DNI). Una vez creado
--el disparador 1, todo alumno nuevo tendrá su correspondiente entrada en AL_ACT, así que
--este procedimiento sirve para aquellos alumnos que ya estuviesen en la BD antes de crear el
--disparador.
CREATE OR REPLACE PROCEDURE PON_AL_ACT (V_DNI CHAR)
AS
  CURSOR CUR_ACT IS SELECT ACT, CE, ACT_CE.MODU, UD, RA FROM ACT_CE, MATRICULA M
  WHERE M.MODU = ACT_CE.MODU AND M.ALU = V_DNI;
BEGIN
  FOR V_ACT IN CUR_ACT LOOP
    INSERT INTO AL_ACT (ALU,ACT,UD,MODU,CE,RA) VALUES
      (V_DNI, V_ACT.ACT, V_ACT.UD, V_ACT.MODU, V_ACT.CE, V_ACT.RA);
  END LOOP;
END;
/

--2. Crear un procedimiento llamado PON_AL_PRU que se encargue de añadir una prueba (con todos
--sus CE) a un alumno que se pase como parámetro (se pasará el DNI).

CREATE OR REPLACE PROCEDURE PON_AL_PRU (V_DNI CHAR)
AS
  CURSOR CUR_PRU IS SELECT PRU, CE, PRU_UD_CE.MODU, UD, RA FROM PRU_UD_CE, MATRICULA M
  WHERE M.MODU = PRU_UD_CE.MODU AND M.ALU = V_DNI;
BEGIN
  FOR V_PRU IN CUR_PRU LOOP
    INSERT INTO AL_PRU (ALU,PRU,CE,RA,MODU) VALUES
      (V_DNI, V_PRU.PRU, V_PRU.CE, V_PRU.RA, V_PRU.MODU);
  END LOOP;
END;
/

--3. Crear un procedimiento llamado PUNTOS al que se le pase como parámetros MOD y UD y muestre los puntos totales obtenidos
--por el alumnado

CREATE OR REPLACE PROCEDURE PUNTOS (v_mod char, v_ud char, V_RA CHAR)
AS
  CURSOR C_PUNTOS_ACT IS SELECT DNI, NOMBRE, APELLIDOS, SUM(PUNTOS) AS PUNTOS FROM AL_ACT AA, ALUMNO A
	WHERE A.DNI=AA.ALU AND AA.MODU=V_MOD AND UD=V_UD
	GROUP BY NOMBRE, APELLIDOS, DNI
	ORDER BY APELLIDOS, NOMBRE;
  CURSOR C_PUNTOS_PRU IS SELECT DNI, NOMBRE, APELLIDOS, SUM(PUNTOS) AS PUNTOS FROM AL_PRU AP, ALUMNO A
	WHERE A.DNI=AP.ALU
	AND AP.MODU=V_MOD AND RA=V_RA
	GROUP BY NOMBRE, APELLIDOS, DNI
	ORDER BY APELLIDOS, NOMBRE;
  V_PUN NUMBER;
BEGIN
  FOR V_ACT IN C_PUNTOS_ACT LOOP
  	FOR V_PRU IN C_PUNTOS_PRU LOOP
    IF V_ACT.DNI = V_PRU.DNI THEN
      V_PUN:=V_ACT.PUNTOS+V_PRU.PUNTOS;
      DBMS_OUTPUT.PUT_LINE(V_ACT.APELLIDOS ||' '|| V_ACT.APELLIDOS ||V_PUN ||' PUNTOS');
    	--INSERT INTO TOTAL_PUNTOS VALUES (V_ACT.APELLIDOS ||' '|| V_ACT.APELLIDOS ||V_ACT.PUNTOS+V_PRU.PUNTOS ||' PUNTOS');
    END IF;
	END LOOP;
  END LOOP;
END;
/
--4. PROCEDIMIENTO PARA CALCULAR NOTAS HASTA UNA UNIDAD QUE SE PASA COMO PARÁMETRO
CREATE OR REPLACE PROCEDURE NOTAS (V_MODU UD.MODU%TYPE, V_UD UD.UD%TYPE, V_RA UD.RA%TYPE)
AS
  --PUNTOS MÁXIMOS TOTALES QUE SE HAN JUGADO EN CADA UNIDAD
  CURSOR C_PMAX IS select ud.ud AS UD, sum(pmax) AS TOTALES from ce, ud
  where ud.modu=ce.modu and ud.ra=ce.ra
  and ud.modu=V_MODU
  group by ud.ud
  order by ud.ud;
  --PUNTOS TOTALES OBTENIDOS POR UN ALUMNO EN LAS ACTIVIDADES
  CURSOR C_PUNTOS_A IS SELECT DNI, NOMBRE, APELLIDOS, SUM(PUNTOS) AS PUNTOS FROM AL_ACT AA, ALUMNO A
	WHERE A.DNI=AA.ALU AND AA.MODU=V_MODU
	GROUP BY NOMBRE, APELLIDOS, DNI
	ORDER BY APELLIDOS, NOMBRE;
  --PUNTOS TOTALES OBTENIDOS POR UN ALUMNO EN LAS PRUEBAS
  CURSOR C_PUNTOS_P IS SELECT DNI, NOMBRE, APELLIDOS, SUM(PUNTOS) AS PUNTOS FROM AL_PRU AP, ALUMNO A
	WHERE A.DNI=AP.ALU
	AND AP.MODU=V_MODU
	GROUP BY NOMBRE, APELLIDOS, DNI
	ORDER BY APELLIDOS, NOMBRE;
  
  --PUNTOS MÁXIMOS TOTALES HASTA UNA UNIDAD DADA
  V_MAX_TOT NUMBER := 0;
  --TOTAL PUNTOS OBTENIDOS POR UN ALUMNO SUMANDO ACTIVIDADES Y PRUEBAS
  V_PUN_TOT NUMBER := 0;
  --NOTA OBTENIDA DE 0 A 10
  V_NOTA NUMBER (5,2) := 0;

BEGIN
  --CALCULAMOS LOS PUNTOS MÁXIMOS TOTALES HASTA UNA UNIDAD DADA
  FOR V_PUN IN C_PMAX LOOP
    IF V_PUN.UD <= V_UD THEN
      V_MAX_TOT := V_MAX_TOT + V_PUN.TOTALES;
    END IF;
  END LOOP;
  --CALCULAMOS LOS PUNTOS OBTENIDOS POR UN ALUMNO
  --SUMANDO LOS DE SUS ACTIVIDADES Y SUS PRUEBAS
  FOR V_ACT IN C_PUNTOS_A LOOP
  	FOR V_PRU IN C_PUNTOS_P LOOP
    IF V_ACT.DNI = V_PRU.DNI THEN
      V_PUN_TOT := V_ACT.PUNTOS+V_PRU.PUNTOS;
      V_NOTA := V_PUN_TOT*10/V_MAX_TOT;
    	DBMS_OUTPUT.PUT_LINE (V_ACT.APELLIDOS ||' '|| V_ACT.NOMBRE ||' '||V_NOTA ||' PUNTOS');
    END IF;
	END LOOP;
  END LOOP;
  DBMS_OUTPUT.PUT_LINE('PUNTOS MÁXIMOS TOTALES HASTA UNIDAD'||V_UD ||': ' ||V_MAX_TOT);
END;
/









